rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS
    // Users can read their own public data.
    // Users can update their own data.
    // New users can create their own document.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isOwner(userId); // Fix: User must be creating their own document.
    }

    // WALLETS (subcollection)
    // Users can manage their own wallets.
    match /users/{userId}/wallets/{walletId} {
        allow read, write: if isOwner(userId);
    }

    // TRANSACTIONS (subcollection)
    // Users can create and read their own transactions.
    // Transactions are immutable (cannot be updated or deleted).
    match /users/{userId}/transactions/{transactionId} {
      allow read, create: if isOwner(userId);
    }
    
    // CIRCLES
    match /circles/{circleId} {
      // Anyone authenticated can view public circle info
      allow read: if request.auth.uid != null;
      // Only members can update a circle
      allow update: if request.auth.uid in resource.data.members;
      // Anyone can create a circle
      allow create: if request.auth.uid != null;
    }
    
    match /circles/{circleId}/transactions/{transactionId} {
        // Members of the circle can see all transactions
        allow read: if get(/databases/$(database)/documents/circles/$(circleId)).data.members.hasAny([request.auth.uid]);
        // Only circle members can create transactions
        allow create: if get(/databases/$(database)/documents/circles/$(circleId)).data.members.hasAny([request.auth.uid]);
    }
  }
}
