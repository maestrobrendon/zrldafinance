rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read/update their own profile.
    // New users can create their own user document.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isOwner(userId);

      // Wallets: Full control for the owner.
      match /wallets/{walletId} {
        allow create, read, update, delete: if isOwner(userId);
      }

      // Transactions: Owner can create and read. They cannot be updated or deleted.
      match /transactions/{transactionId} {
        allow create, read: if isOwner(userId);
        allow update, delete: if false;
      }
    }
    
    // Circles are public to read for any authenticated user, but only members can modify.
    // Creating a circle is allowed for any authenticated user.
    match /circles/{circleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth.uid in resource.data.members;

      // Transactions within a circle
      match /transactions/{transactionId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/circles/$(circleId)).data.members;
        allow create: if request.auth.uid in get(/databases/$(database)/documents/circles/$(circleId)).data.members;
      }
    }
  }
}
